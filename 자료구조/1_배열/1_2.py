
# 코드업 6098 : 성실한 개미

# 문제 분석
# * index 세는 방법 0~9 기준
# 0. 추가로 주어진 가정 -> **미로 상자의 테두리는 모두 벽으로 되어있음, 개미는 (1,1)에서 출발**
# 1-1. 개미는 오른쪽으로 가거나 아래로만 갈 수 있음.
# 1-2. 오른쪽으로 가다가 벽(1)이면 아래로 움직인 후 다시 오른쪽으로 이동
# 2. 개미가 지나간 길 + 먹이가 있는 위치 = 9로 표시
# 3. 개미가 더 이상 움직일 수 없는 경우 3가지
# - 맨 아래의 가장 오른쪽에 도착한 경우 (좌표 8,8) -> 상자의 테두리가 모두 벽이므로
# - 더 이상 움직일 수 없는 경우 = 오른쪽도 1, 아래쪽도 1일 경우 움직일 수 없음
# - 먹이(2)를 찾은 경우
# +) 3번의 3가지 경우 모두 조건을 걸어 만족할 경우 break를 걸어줄 것이기 때문에 무한루프(while True)를 걸어줘도 됨

res = [list(map(int, input().split())) for _ in range(10)]
x, y = 1, 1 # 출발 위치

# 미로 진로 과정
while True:
    if res[x][y] == 0:
        res[x][y] = 9
    elif res[x][y] == 2:
        res[x][y] = 9
        break

    if (x == 8 and y == 8) or (res[x][y+1] == 1 and res[x+1][y] == 1):
        break

    if res[x][y+1] != 1:
        y += 1
    elif res[x+1][y] != 1:
        x += 1

# 출력
for i in range(10):
    for j in range(10):
        print(res[i][j], end=' ')
    print()